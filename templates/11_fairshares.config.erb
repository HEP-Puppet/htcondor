## Half-life of user priorities
PRIORITY_HALFLIFE = <%= @priority_halflife %>

# Allow groups to use more than their fairshare if others aren't busy
GROUP_ACCEPT_SURPLUS = <%= @group_accept_surplus %>
GROUP_AUTOREGROUP = <%= @group_autoregroup %>

# groups
<% keys = @accounting_groups.keys.sort -%>

GROUP_NAMES = \
<% (0..keys.length.to_i-1).each do |i| -%>
<% key = keys[i] -%>
<% if i == keys.length.to_i-1 -%>
              group_<%= key %>
<% else -%>
              group_<%= key %>, \
<% end -%>
<% end -%>

<% if @high_priority_groups -%>
# consider high_priority groups first and make sure that multi core slot doesn't disappear quickly
GROUP_SORT_EXPR = ifThenElse(AccountingGroup=?="<none>", 3.4e+38, \
<% @high_priority_groups.keys.sort.each do |key| -%>
ifThenElse(AccountingGroup=?="group_<%= key -%>", <%= @high_priority_groups[key] -%>, \
<% end -%>
ifThenElse(regexp("multicore",AccountingGroup),ifThenElse(GroupQuota > 0,-2+GroupResourcesInUse/GroupQuota,-1), \
ifThenElse(GroupQuota > 0, GroupResourcesInUse/GroupQuota, 3.3e+38)\
))<% @high_priority_groups.keys.sort.each do |key| -%>)<%end%>
<% end -%>

# Default priorities
DEFAULT_PRIO_FACTOR            = <%= @default_prio_factor %>
<% @accounting_groups.keys.sort.each do |key| -%>
<% value = @accounting_groups[key] -%>
<% if value.has_key?('priority_factor') -%>
GROUP_PRIO_FACTOR_group_<%= key %> =  <%= value['priority_factor'] %>
<% end -%>
<% end -%>

# overall groups
<% @accounting_groups.keys.sort.each do |key| -%>
<% value = @accounting_groups[key] -%>
<% if value.has_key?('dynamic_quota') -%>
GROUP_QUOTA_DYNAMIC_group_<%= key %> =  <%= value['dynamic_quota'] %>
<% end -%>
<% end %>
